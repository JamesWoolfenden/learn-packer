{
  "builders": [
    {
      "access_key": "{{user `aws_access_key`}}",
      "ami_description": "RHEL base AMI",
      "ami_name": "RHEL-BASE-v{{user `build_number`}}-{{timestamp}}-AMI",
      "ami_users": "{{ user `ami_users` }}",
      "ami_virtualization_type": "hvm",
      "associate_public_ip_address": true,
      "instance_type": "{{ user `instance_type` }}",
      "region": "{{user `aws_region`}}",
      "run_tags": {
        "Application": "base",
        "Name": "rhel-base-packer"
      },
      "secret_key": "{{user `aws_secret_key`}}",
      "source_ami_filter": {
        "filters": {
          "name": "RHEL-7.6_HVM_GA-*",
          "root-device-type": "ebs",
          "virtualization-type": "hvm"
        },
        "most_recent": true,
        "owners": [
          "309956199498"
        ]
      },
      "spot_price": "auto",
      "ssh_username": "ec2-user",
      "subnet_id": "{{user `subnet_id`}}",
      "tags": {
        "Application": "Base Image",
        "OS_Version": "RedHat7",
        "Runner": "EC2",
        "Version": "{{user `build_number`}}"
      },
      "temporary_key_pair_name": "rhel-packer-{{timestamp}}",
      "token": "{{user `aws_session_token`}}",
      "type": "amazon-ebs",
      "vpc_id": "{{user `vpc_id`}}"
    }
  ],
  "provisioners": [
    {
      "script": "{{ user `provisioner_path` }}/provisioners/scripts/linux/redhat/install_ansible.sh",
      "type": "shell"
    },
    {
      "script": "{{ user `provisioner_path` }}/provisioners/scripts/linux/redhat/install_aws_ssm.sh",
      "type": "shell"
    },
    {
      "playbook_file": "{{ user `provisioner_path` }}/provisioners/ansible/playbooks/cloudwatch-metrics.yml",
      "role_paths": [
        "{{ user `provisioner_path` }}/provisioners/ansible/roles/cloudwatch-metrics"
      ],
      "type": "ansible-local"
    }
  ],
  "variables": {
    "aws-region": "{{env `AWS_REGION`}}",
    "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
    "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}",
    "aws_session_token": "{{env `AWS_SESSION_TOKEN`}}",
    "build_number": "{{env `BUILD_NUMBER`}}",
    "instance_type": "t2.micro",
    "provisioner_path": "{{template_dir}}/../../.."
  }
}
